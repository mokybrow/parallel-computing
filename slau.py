import numpy as np # библиотека для численных #расчетов на Python
n = 3 # размер вектора
x = np.ones(n) #задаем вектор решения: вектор из единиц 
A = np.eye(n) # матрица СЛАУ задается как единичная
b = np.matmul(A,x) # правая часть СЛАУ вычисляется
                   #как произведение
                   # матрицы A на вектор решения x
eps = 1e6 # задаем невязку
# (величину, показывающую степень
               # близости к решению)
xn = np.zeros(n)
num_iter = 0
tau = 0.01
# вектор начального приближения
# (в данном случае как вектор из нулей)
# номер итерации (приближения)
# параметр метода
while eps > 1e-3: # цикл, выполняющий продвижение
    # от начального приближения к решению
    # через последовательность приближений 
    xn1 = xn - tau* (np.matmul(A,xn) - b) # вычисление
    #следующего приближения xn1
    # через текущее приближение xn
    eps = np.max(np.abs(xn1-xn)) # вычисление невязки
                                   # максимальный модуль
    #разности компонент двух #векторов
    xn = xn1 # обновление вектора текущего приближения 
    num_iter = num_iter +1
    print(eps,num_iter)
print(xn) # вывод полученного решения